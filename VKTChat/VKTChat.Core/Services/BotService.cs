using System.Text.RegularExpressions;
using VKTChat.Core.Models;

namespace VKTChat.Core.Services
{
    public class BotService : IBotService
    {
        #region User Message Patterns
        private const string Hello_pattern = @"(?:з+д+р+а+в+с+т+в+у+й+(?:т+е+)?)
                                    |(?:д+о+б+р+ы+й+ +(?:д+е+н+ь)|(?:в+е+ч+е+р+))
                                    |(?:д+о+б+р+о+е+ +у+т+р+о+)
                                    |(?:з+д+а+р+о+в+(?:(?:а+)|(?:е+н+ь+к+и+))?)
                                    |(?:с+а+л+ю+т+)
                                    |(?:х+а+й+)
                                    |(?:й+о+)
                                    |(?:к+у+(?:-+к+у+)?)
                                    |(?:х+е+л+л+о+у*)
                                    |(?:п+р+и+в+(?:(?:е+т+и+к+и+)|(?:е+т+)|(?:е+т+с+т+в+у+ю+)|(?:е+т+у+ш+к+и+)|(?:е+т+у+л+и+))?)";
        #endregion
        #region Properties
        private readonly string[] _helloResponses = new string[]
        {
            "Привет! Как я могу помочь вам сегодня?",
            "Привет! Как дела?",
            "Привет! Какие у тебя планы на сегодня?",
            "Хелло, ма френд",
            "Привет!"
        };
        private readonly string[] _jokeResponses = new string[]
        {
            "Вот простой рецепт классических блинов:\r\n\r\n" +
            "Ингредиенты:\r\n" +
            "- 1 стакан муки\r\n" +
            "- 2 яйца\r\n" +
            "- 2 стакана молока\r\n" +
            "- 2 столовые ложки растительного масла\r\n" +
            "- Щепотка соли\r\n\r\n" +
            "Инструкции:\r\n" +
            "1. В большой миске смешайте муку и яйца.\r\n" +
            "2. Постепенно добавляйте молоко, постоянно помешивая, чтобы избежать комков.\r\n" +
            "3. Добавьте растительное масло и щепотку соли, продолжайте перемешивать, пока тесто не станет гладким.\r\n" +
            "4. Разогрейте сковороду на среднем огне и добавьте немного масла.\r\n5. Вылейте небольшое количество теста на сковороду и равномерно распределите его по всей поверхности, чтобы получить тонкий блин.\r\n" +
            "6. Жарьте блин с одной стороны до золотистого цвета, затем переверните его и жарьте с другой стороны.\r\n7. Повторяйте процесс с оставшимся тестом, добавляя масло на сковороду по мере необходимости.\r\n" +
            "8. Готовые блины можно подавать с медом, вареньем, сгущенным молоком, или любыми другими начинками по вашему выбору.\r\n\r\n" +
            "Приятного аппетита!",

            "Вот анекдот:\r\n\r\n" +
            "В поезде едут 3 юзера и 3 программиста.\r\n" +
            "У юзеров 3 билета, у программистов 1. Заходит контроллер.\r\n" +
            "Юзеры показывают билеты, программисты прячутся в туалет. Контроллер стучится в туалет, оттуда высовывается рука с билетом. Программисты едут дальше.\r\n" +
            "На обратном пути. У юзеров 1 билет, у программистов ни одного. Заходит контроллер.\r\nЮзеры прячутся в туалет. Один из программистов стучит, из туалета высовывается рука с билетом. Программисты забирают билет и прячутся в соседний туалет. Юзеров ссаживают с поезда.\r\n" +
            "Вывод — не всякий алгоритм, доступный программисту, доступен юзеру.",

            "Вот шутка:\r\n\r\n" +
            "Настоящий сисадмин может на глаз определить, сколько весит файл.",

            "Вот анекдот:\r\n\r\n" +
            "Программиста спрашивают:\r\n" +
            "-Как вам удалось так быстро выучить английский язык?\r\n" +
            "-Да, ерунда какая. Они там почти все слова из C# взяли.",

            "Вот анекдот:\r\n\r\n" +
            "Когда в нашей фирме по разработке ПО кадры предложили перевести трудовую книжку из бумажной в электронную — не согласился ни 1 программист. Это все, что надо знать про программирование.",
        };
        #endregion
        public async Task<Message> RespondToMessageAsync(Bot bot, Message message)
        {
            ArgumentNullException.ThrowIfNull(message);

            if (message.User is null || message.Bot is not null)
                throw new InvalidOperationException("Bot can't response to Bot");

            var rnd = new Random();
            if (Regex.IsMatch(message.Text.ToLower(), Hello_pattern, RegexOptions.IgnoreCase & RegexOptions.Multiline))
            {
                return Message.FromBot(bot, _helloResponses[rnd.Next(_helloResponses.Length)]);
            }
            else
            {
                return Message.FromBot(bot, "Не знаю даже, что ответить..\r\n" +
                    _jokeResponses[rnd.Next(_jokeResponses.Length)]);
            }
        }
    }
}
